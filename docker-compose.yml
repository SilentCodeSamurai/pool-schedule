version: '3.9'

services:
    postgres:
        image: postgres:latest
        container_name: postgres
        environment:
            POSTGRES_USER: postgres_user
            POSTGRES_PASSWORD: postgres_password
            POSTGRES_DB: postgres_db
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - "5430:5432"
        volumes:
            - schedule-data:/var/lib/postgresql/data/pgdata
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 512M
                reservations:
                    cpus: '0.25'
                    memory: 256M
        command: >
            postgres -c max_connections=1000
                     -c shared_buffers=256MB
                     -c effective_cache_size=768MB
                     -c maintenance_work_mem=64MB
                     -c checkpoint_completion_target=0.7
                     -c wal_buffers=16MB
                     -c default_statistics_target=100
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U postgres_user -d postgres_db"
                ]
            interval: 30s
            timeout: 10s
            retries: 5
        restart: unless-stopped
        tty: true
        stdin_open: true
        networks:
            - facade

    app:
        build: .
        container_name: app
        environment:
            - DATABASE_URL=postgresql://postgres_user:postgres_password@postgres:5432/postgres_db?schema=public
        depends_on:
            postgres:
                condition: service_healthy
        ports:
            - "80:3000"
        restart: unless-stopped
        command:
            [
                "sh",
                "-c",
                "npx prisma db push && npx prisma migrate deploy && npx prisma db seed && npm start"
            ]
        networks:
            - facade

volumes:
    schedule-data:
        driver: local

networks:
    facade:
        driver: bridge
